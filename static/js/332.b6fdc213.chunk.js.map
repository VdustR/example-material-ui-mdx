{"version":3,"sources":["../node_modules/prismjs/components/prism-velocity.js"],"names":["Prism","languages","velocity","extend","variable","pattern","lookbehind","inside","string","greedy","number","boolean","operator","punctuation","function","insertBefore","unparsed","velocity-comment","alias","directive","keyword","rest"],"mappings":"8EAAA,SAAAA,GACAA,EAAAC,UAAAC,SAAAF,EAAAC,UAAAE,OAAA,aACA,IAAAD,EAAA,CACAE,SAAA,CACAC,QAAA,yGACAC,YAAA,EACAC,OAAA,IAGAC,OAAA,CACAH,QAAA,kBACAI,QAAA,GAEAC,OAAA,UACAC,QAAA,qBACAC,SAAA,kEACAC,YAAA,gBAEAX,EAAAE,SAAAG,OAAA,CACAC,OAAAN,EAAA,OACAY,SAAA,CACAT,QAAA,4BACAC,YAAA,GAEAI,OAAAR,EAAA,OACAS,QAAAT,EAAA,QACAW,YAAAX,EAAA,aAEAF,EAAAC,UAAAc,aAAA,sBACAC,SAAA,CACAX,QAAA,4BACAC,YAAA,EACAG,QAAA,EACAF,OAAA,CACAM,YAAA,gBAGAI,mBAAA,EACAZ,QAAA,0BACAC,YAAA,EACAG,QAAA,EACAS,MAAA,WACK,CACLb,QAAA,gBACAC,YAAA,EACAG,QAAA,EACAS,MAAA,YAEAC,UAAA,CACAd,QAAA,uFACAC,YAAA,EACAC,OAAA,CACAa,QAAA,CACAf,QAAA,2CACAE,OAAA,CACAM,YAAA,SAGAQ,KAAAnB,IAGAE,SAAAF,EAAA,WAEAF,EAAAC,UAAAC,SAAA,IAAAK,OAAA,cAAAA,OAAAc,KAAArB,EAAAC,UAAAC,SA/DA,CAgECF","file":"static/js/332.b6fdc213.chunk.js","sourcesContent":["(function (Prism) {\n  Prism.languages.velocity = Prism.languages.extend('markup', {});\n  var velocity = {\n    'variable': {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n      lookbehind: true,\n      inside: {} // See below\n\n    },\n    'string': {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    'number': /\\b\\d+\\b/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n    'punctuation': /[(){}[\\]:,.]/\n  };\n  velocity.variable.inside = {\n    'string': velocity['string'],\n    'function': {\n      pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n      lookbehind: true\n    },\n    'number': velocity['number'],\n    'boolean': velocity['boolean'],\n    'punctuation': velocity['punctuation']\n  };\n  Prism.languages.insertBefore('velocity', 'comment', {\n    'unparsed': {\n      pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^#\\[\\[|]]#$/\n      }\n    },\n    'velocity-comment': [{\n      pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'comment'\n    }, {\n      pattern: /(^|[^\\\\])##.*/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'comment'\n    }],\n    'directive': {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n          inside: {\n            'punctuation': /[{}]/\n          }\n        },\n        rest: velocity\n      }\n    },\n    'variable': velocity['variable']\n  });\n  Prism.languages.velocity['tag'].inside['attr-value'].inside.rest = Prism.languages.velocity;\n})(Prism);"],"sourceRoot":""}