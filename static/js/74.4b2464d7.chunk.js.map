{"version":3,"sources":["../node_modules/prismjs/components/prism-django.js"],"names":["Prism","languages","django","comment","tag","pattern","lookbehind","alias","delimiter","string","greedy","filter","test","function","keyword","operator","number","boolean","variable","punctuation","markupTemplating","hooks","add","env","buildPlaceholders","tokenizePlaceholders","jinja2"],"mappings":"6EAEA,SAAAA,GACAA,EAAAC,UAAAC,OAAA,CACAC,QAAA,iBACAC,IAAA,CACAC,QAAA,mBACAC,YAAA,EACAC,MAAA,WAEAC,UAAA,CACAH,QAAA,0BACAE,MAAA,eAEAE,OAAA,CACAJ,QAAA,kCACAK,QAAA,GAEAC,OAAA,CACAN,QAAA,UACAC,YAAA,EACAC,MAAA,YAEAK,KAAA,CACAP,QAAA,mCACAC,YAAA,EACAC,MAAA,YAEAM,SAAA,wBACAC,QAAA,gFACAC,SAAA,uDACAC,OAAA,oBACAC,QAAA,2BACAC,SAAA,WACAC,YAAA,iBAEA,IAAAd,EAAA,0CACAe,EAAApB,EAAAC,UAAA,qBACAD,EAAAqB,MAAAC,IAAA,2BAAAC,GACAH,EAAAI,kBAAAD,EAAA,SAAAlB,KAEAL,EAAAqB,MAAAC,IAAA,0BAAAC,GACAH,EAAAK,qBAAAF,EAAA,YAGAvB,EAAAC,UAAAyB,OAAA1B,EAAAC,UAAAC,OACAF,EAAAqB,MAAAC,IAAA,2BAAAC,GACAH,EAAAI,kBAAAD,EAAA,SAAAlB,KAEAL,EAAAqB,MAAAC,IAAA,0BAAAC,GACAH,EAAAK,qBAAAF,EAAA,YAhDA,CAkDCvB","file":"static/js/74.4b2464d7.chunk.js","sourcesContent":["// Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n// Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n(function (Prism) {\n  Prism.languages.django = {\n    'comment': /^{#[\\s\\S]*?#}$/,\n    'tag': {\n      pattern: /(^{%[+-]?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'delimiter': {\n      pattern: /^{[{%][+-]?|[+-]?[}%]}$/,\n      alias: 'punctuation'\n    },\n    'string': {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'filter': {\n      pattern: /(\\|)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'test': {\n      pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'function': /\\b[a-z_]\\w+(?=\\s*\\()/i,\n    'keyword': /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n    'operator': /[-+*/%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    'number': /\\b\\d+(?:\\.\\d+)?\\b/,\n    'boolean': /[Tt]rue|[Ff]alse|[Nn]one/,\n    'variable': /\\b\\w+?\\b/,\n    'punctuation': /[{}[\\](),.:;]/\n  };\n  var pattern = /{{[\\s\\S]*?}}|{%[\\s\\S]*?%}|{#[\\s\\S]*?#}/g;\n  var markupTemplating = Prism.languages['markup-templating'];\n  Prism.hooks.add('before-tokenize', function (env) {\n    markupTemplating.buildPlaceholders(env, 'django', pattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    markupTemplating.tokenizePlaceholders(env, 'django');\n  }); // Add an Jinja2 alias\n\n  Prism.languages.jinja2 = Prism.languages.django;\n  Prism.hooks.add('before-tokenize', function (env) {\n    markupTemplating.buildPlaceholders(env, 'jinja2', pattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    markupTemplating.tokenizePlaceholders(env, 'jinja2');\n  });\n})(Prism);"],"sourceRoot":""}