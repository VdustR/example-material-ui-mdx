{"version":3,"sources":["../node_modules/prismjs/components/prism-csharp.min.js"],"names":["Prism","languages","csharp","extend","keyword","string","pattern","greedy","inside","punctuation","lookbehind","number","operator","insertBefore","function","preprocessor","alias","directive","dotnet","cs"],"mappings":"+HAAAA,MAAMC,UAAUC,OAASF,MAAMC,UAAUE,OAAO,QAAS,CACvDC,QAAS,6oBACTC,OAAQ,CAAC,CACPC,QAAS,yCACTC,QAAQ,GACP,CACDD,QAAS,mCACTC,QAAQ,IAEV,aAAc,CAAC,CACbD,QAAS,mCACTE,OAAQ,CACNC,YAAa,OAEd,CACDH,QAAS,2BACTI,YAAY,EACZF,OAAQ,CACNC,YAAa,OAEd,CACDH,QAAS,0EACTI,YAAY,EACZF,OAAQ,CACNC,YAAa,OAEd,CACDH,QAAS,wEACTI,YAAY,EACZF,OAAQ,CACNC,YAAa,QAGjBE,OAAQ,4CACRC,SAAU,kDACVH,YAAa,2BACXT,MAAMC,UAAUY,aAAa,SAAU,aAAc,CACvD,iBAAkB,CAChBP,QAAS,8BACTE,OAAQ,CACNM,SAAU,OACV,aAAc,CACZR,QAAS,yBACTE,OAAQ,CACNC,YAAa,OAGjBL,QAASJ,MAAMC,UAAUC,OAAOE,QAChCK,YAAa,cAGjBM,aAAc,CACZT,QAAS,aACTI,YAAY,EACZM,MAAO,WACPR,OAAQ,CACNS,UAAW,CACTX,QAAS,2FACTI,YAAY,EACZM,MAAO,eAIXhB,MAAMC,UAAUiB,OAASlB,MAAMC,UAAUkB,GAAKnB,MAAMC,UAAUC","file":"static/js/61.9c83f557.chunk.js","sourcesContent":["Prism.languages.csharp = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n  string: [{\n    pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n    greedy: !0\n  }],\n  \"class-name\": [{\n    pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }],\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i,\n  operator: />>=?|<<=?|[-=]>|([-+&|?])\\1|~|[-+*/%&|^!=<>]=?/,\n  punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n}), Prism.languages.insertBefore(\"csharp\", \"class-name\", {\n  \"generic-method\": {\n    pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n    inside: {\n      function: /^\\w+/,\n      \"class-name\": {\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      keyword: Prism.languages.csharp.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  },\n  preprocessor: {\n    pattern: /(^\\s*)#.*/m,\n    lookbehind: !0,\n    alias: \"property\",\n    inside: {\n      directive: {\n        pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n        lookbehind: !0,\n        alias: \"keyword\"\n      }\n    }\n  }\n}), Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp;"],"sourceRoot":""}