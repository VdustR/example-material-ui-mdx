{"version":3,"sources":["../node_modules/prismjs/components/prism-fsharp.js"],"names":["Prism","languages","fsharp","extend","comment","pattern","lookbehind","string","greedy","class-name","inside","operator","punctuation","keyword","number","insertBefore","preprocessor","alias","directive","computation-expression","annotation","annotation-content"],"mappings":"4EAAAA,MAAAC,UAAAC,OAAAF,MAAAC,UAAAE,OAAA,SACAC,QAAA,EACAC,QAAA,4BACAC,YAAA,GACG,CACHD,QAAA,mBACAC,YAAA,IAEAC,OAAA,CACAF,QAAA,iFACAG,QAAA,GAEAC,aAAA,CACAJ,QAAA,yHACAC,YAAA,EACAI,OAAA,CACAC,SAAA,QACAC,YAAA,OAGAC,QAAA,koBACAC,OAAA,2IACAH,SAAA,8GAEAX,MAAAC,UAAAc,aAAA,oBACAC,aAAA,CACAX,QAAA,kBACAY,MAAA,WACAP,OAAA,CACAQ,UAAA,CACAb,QAAA,gDACAC,YAAA,EACAW,MAAA,eAKAjB,MAAAC,UAAAc,aAAA,wBACAI,yBAAA,CACAd,QAAA,sBACAY,MAAA,aAGAjB,MAAAC,UAAAc,aAAA,mBACAK,WAAA,CACAf,QAAA,YACAK,OAAA,CACAE,YAAA,YACAH,aAAA,CACAJ,QAAA,+BACAC,YAAA,GAEAe,qBAAA,CACAhB,QAAA,UACAK,OAAAV,MAAAC,UAAAC","file":"static/js/96.7f8ad564.chunk.js","sourcesContent":["Prism.languages.fsharp = Prism.languages.extend('clike', {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'string': {\n    pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\.)'B?/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n    lookbehind: true,\n    inside: {\n      'operator': /->|\\*/,\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n  'number': [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/],\n  'operator': /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n});\nPrism.languages.insertBefore('fsharp', 'keyword', {\n  'preprocessor': {\n    pattern: /^[^\\r\\n\\S]*#.*/m,\n    alias: 'property',\n    inside: {\n      'directive': {\n        pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  }\n});\nPrism.languages.insertBefore('fsharp', 'punctuation', {\n  'computation-expression': {\n    pattern: /[_a-z]\\w*(?=\\s*\\{)/i,\n    alias: 'keyword'\n  }\n});\nPrism.languages.insertBefore('fsharp', 'string', {\n  'annotation': {\n    pattern: /\\[<.+?>\\]/,\n    inside: {\n      'punctuation': /^\\[<|>\\]$/,\n      'class-name': {\n        pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n        lookbehind: true\n      },\n      'annotation-content': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.fsharp\n      }\n    }\n  }\n});"],"sourceRoot":""}