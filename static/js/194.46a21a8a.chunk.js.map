{"version":3,"sources":["../node_modules/prismjs/components/prism-markup.js"],"names":["Prism","languages","markup","comment","prolog","doctype","cdata","tag","pattern","greedy","inside","punctuation","namespace","attr-value","lookbehind","attr-name","entity","hooks","add","env","type","attributes","content","replace","Object","defineProperty","value","tagName","lang","includedCdataInside","included-cdata","def","RegExp","source","insertBefore","xml","extend","html","mathml","svg"],"mappings":"6EAAAA,MAAAC,UAAAC,OAAA,CACAC,QAAA,kBACAC,OAAA,iBACAC,QAAA,sBACAC,MAAA,0BACAC,IAAA,CACAC,QAAA,yHACAC,QAAA,EACAC,OAAA,CACAH,IAAA,CACAC,QAAA,kBACAE,OAAA,CACAC,YAAA,QACAC,UAAA,iBAGAC,aAAA,CACAL,QAAA,sCACAE,OAAA,CACAC,YAAA,OACAH,QAAA,mBACAM,YAAA,MAIAH,YAAA,OACAI,YAAA,CACAP,QAAA,YACAE,OAAA,CACAE,UAAA,mBAKAI,OAAA,qBAEAhB,MAAAC,UAAAC,OAAA,IAAAQ,OAAA,cAAAA,OAAA,OAAAV,MAAAC,UAAAC,OAAA,OAEAF,MAAAiB,MAAAC,IAAA,gBAAAC,GACA,WAAAA,EAAAC,OACAD,EAAAE,WAAA,MAAAF,EAAAG,QAAAC,QAAA,QAAwD,QAGxDC,OAAAC,eAAAzB,MAAAC,UAAAC,OAAAK,IAAA,cAYAmB,MAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACAA,EAAA,YAAAD,GAAA,CACApB,QAAA,oCACAM,YAAA,EACAJ,OAAAV,MAAAC,UAAA2B,IAEAC,EAAA,6BACA,IAAAnB,EAAA,CACAoB,iBAAA,CACAtB,QAAA,4BACAE,OAAAmB,IAGAnB,EAAA,YAAAkB,GAAA,CACApB,QAAA,UACAE,OAAAV,MAAAC,UAAA2B,IAEA,IAAAG,EAAA,GACAA,EAAAJ,GAAA,CACAnB,QAAAwB,OAAA,mEAAAC,OAAAV,QAAA,MAAAI,GAAA,KACAb,YAAA,EACAL,QAAA,EACAC,UAEAV,MAAAC,UAAAiC,aAAA,iBAAAH,MAGA/B,MAAAC,UAAAkC,IAAAnC,MAAAC,UAAAmC,OAAA,aACApC,MAAAC,UAAAoC,KAAArC,MAAAC,UAAAC,OACAF,MAAAC,UAAAqC,OAAAtC,MAAAC,UAAAC,OACAF,MAAAC,UAAAsC,IAAAvC,MAAAC,UAAAC","file":"static/js/194.46a21a8a.chunk.js","sourcesContent":["Prism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;"],"sourceRoot":""}