{"version":3,"sources":["../node_modules/prismjs/components/prism-livescript.min.js"],"names":["Prism","languages","livescript","comment","pattern","lookbehind","interpolated-string","greedy","inside","variable","interpolation","interpolation-punctuation","alias","string","regex","keyword","keyword-operator","boolean","argument","number","identifier","operator","punctuation","rest"],"mappings":"6EAAAA,MAAAC,UAAAC,WAAA,CACAC,QAAA,EACAC,QAAA,4BACAC,YAAA,GACG,CACHD,QAAA,eACAC,YAAA,IAEAC,sBAAA,CACAF,QAAA,kDACAC,YAAA,EACAE,QAAA,EACAC,OAAA,CACAC,SAAA,CACAL,QAAA,sCACAC,YAAA,GAEAK,cAAA,CACAN,QAAA,uBACAC,YAAA,EACAG,OAAA,CACAG,4BAAA,CACAP,QAAA,WACAQ,MAAA,cAIAC,OAAA,YAGAA,OAAA,EACAT,QAAA,qCACAG,QAAA,GACG,CACHH,QAAA,iBACAG,QAAA,GACG,kBACHO,MAAA,EACAV,QAAA,kDACAG,QAAA,EACAC,OAAA,CACAL,QAAA,CACAC,QAAA,eACAC,YAAA,KAGG,CACHD,QAAA,4CACAG,QAAA,IAEAQ,QAAA,CACAX,QAAA,wQACAC,YAAA,GAEAW,mBAAA,CACAZ,QAAA,+JACAC,YAAA,EACAO,MAAA,YAEAK,QAAA,CACAb,QAAA,iDACAC,YAAA,GAEAa,SAAA,CACAd,QAAA,8BACAC,YAAA,EACAO,MAAA,YAEAO,OAAA,2DACAC,WAAA,4BACAC,SAAA,EACAjB,QAAA,aACAC,YAAA,GACG,qLACHiB,YAAA,oBACCtB,MAAAC,UAAAC,WAAA,uBAAAM,OAAAE,cAAAF,OAAAe,KAAAvB,MAAAC,UAAAC","file":"static/js/183.ad11a62f.chunk.js","sourcesContent":["Prism.languages.livescript = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  }],\n  \"interpolated-string\": {\n    pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n    lookbehind: !0,\n    greedy: !0,\n    inside: {\n      variable: {\n        pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n        lookbehind: !0\n      },\n      interpolation: {\n        pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n        lookbehind: !0,\n        inside: {\n          \"interpolation-punctuation\": {\n            pattern: /^#\\{|\\}$/,\n            alias: \"variable\"\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  },\n  string: [{\n    pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /<\\[[\\s\\S]*?\\]>/,\n    greedy: !0\n  }, /\\\\[^\\s,;\\])}]+/],\n  regex: [{\n    pattern: /\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,\n    greedy: !0,\n    inside: {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: !0\n      }\n    }\n  }, {\n    pattern: /\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}/,\n    greedy: !0\n  }],\n  keyword: {\n    pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n    lookbehind: !0\n  },\n  \"keyword-operator\": {\n    pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n    lookbehind: !0,\n    alias: \"operator\"\n  },\n  boolean: {\n    pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n    lookbehind: !0\n  },\n  argument: {\n    pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n  identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n  operator: [{\n    pattern: /( )\\.(?= )/,\n    lookbehind: !0\n  }, /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],\n  punctuation: /[(){}\\[\\]|.,:;`]/\n}, Prism.languages.livescript[\"interpolated-string\"].inside.interpolation.inside.rest = Prism.languages.livescript;"],"sourceRoot":""}