{"version":3,"sources":["../node_modules/prismjs/components/prism-velocity.min.js"],"names":["e","languages","velocity","extend","n","variable","pattern","lookbehind","inside","string","greedy","number","boolean","operator","punctuation","function","insertBefore","unparsed","velocity-comment","alias","directive","keyword","rest","tag","Prism"],"mappings":"8EAAA,SAAAA,GACAA,EAAAC,UAAAC,SAAAF,EAAAC,UAAAE,OAAA,aACA,IAAAC,EAAA,CACAC,SAAA,CACAC,QAAA,yGACAC,YAAA,EACAC,OAAA,IAEAC,OAAA,CACAH,QAAA,kBACAI,QAAA,GAEAC,OAAA,UACAC,QAAA,qBACAC,SAAA,kEACAC,YAAA,gBAEAV,EAAAC,SAAAG,OAAA,CACAC,OAAAL,EAAAK,OACAM,SAAA,CACAT,QAAA,4BACAC,YAAA,GAEAI,OAAAP,EAAAO,OACAC,QAAAR,EAAAQ,QACAE,YAAAV,EAAAU,aACGd,EAAAC,UAAAe,aAAA,sBACHC,SAAA,CACAX,QAAA,4BACAC,YAAA,EACAG,QAAA,EACAF,OAAA,CACAM,YAAA,gBAGAI,mBAAA,EACAZ,QAAA,0BACAC,YAAA,EACAG,QAAA,EACAS,MAAA,WACK,CACLb,QAAA,gBACAC,YAAA,EACAG,QAAA,EACAS,MAAA,YAEAC,UAAA,CACAd,QAAA,uFACAC,YAAA,EACAC,OAAA,CACAa,QAAA,CACAf,QAAA,2CACAE,OAAA,CACAM,YAAA,SAGAQ,KAAAlB,IAGAC,SAAAD,EAAAC,WACGL,EAAAC,UAAAC,SAAAqB,IAAAf,OAAA,cAAAA,OAAAc,KAAAtB,EAAAC,UAAAC,SA5DH,CA6DCsB","file":"static/js/333.cfa8999a.chunk.js","sourcesContent":["!function (e) {\n  e.languages.velocity = e.languages.extend(\"markup\", {});\n  var n = {\n    variable: {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n      lookbehind: !0,\n      inside: {}\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: !0\n    },\n    number: /\\b\\d+\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n    punctuation: /[(){}[\\]:,.]/\n  };\n  n.variable.inside = {\n    string: n.string,\n    function: {\n      pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n      lookbehind: !0\n    },\n    number: n.number,\n    boolean: n.boolean,\n    punctuation: n.punctuation\n  }, e.languages.insertBefore(\"velocity\", \"comment\", {\n    unparsed: {\n      pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        punctuation: /^#\\[\\[|]]#$/\n      }\n    },\n    \"velocity-comment\": [{\n      pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"comment\"\n    }, {\n      pattern: /(^|[^\\\\])##.*/,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"comment\"\n    }],\n    directive: {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n      lookbehind: !0,\n      inside: {\n        keyword: {\n          pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n          inside: {\n            punctuation: /[{}]/\n          }\n        },\n        rest: n\n      }\n    },\n    variable: n.variable\n  }), e.languages.velocity.tag.inside[\"attr-value\"].inside.rest = e.languages.velocity;\n}(Prism);"],"sourceRoot":""}