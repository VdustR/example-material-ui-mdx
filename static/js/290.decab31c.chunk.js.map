{"version":3,"sources":["../node_modules/prismjs/components/prism-scheme.js"],"names":["Prism","languages","scheme","comment","string","pattern","greedy","character","alias","keyword","lookbehind","builtin","number","boolean","operator","function","punctuation"],"mappings":"6EAAAA,MAAAC,UAAAC,OAAA,CACAC,QAAA,MACAC,OAAA,CACAC,QAAA,gCACAC,QAAA,GAEAC,UAAA,CACAF,QAAA,sCACAG,MAAA,UAEAC,QAAA,CACAJ,QAAA,8LACAK,YAAA,GAEAC,QAAA,CACAN,QAAA,0NACAK,YAAA,GAEAE,OAAA,CACAP,QAAA,oDACAK,YAAA,GAEAG,QAAA,QACAC,SAAA,CACAT,QAAA,sCACAK,YAAA,GAEAK,SAAA,CACAV,QAAA,6BACAK,YAAA,GAEAM,YAAA","file":"static/js/290.decab31c.chunk.js","sourcesContent":["Prism.languages.scheme = {\n  'comment': /;.*/,\n  'string': {\n    pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|'[^()#'\\s]+/,\n    greedy: true\n  },\n  'character': {\n    pattern: /#\\\\(?:[ux][a-fA-F\\d]+|[a-zA-Z]+|\\S)/,\n    alias: 'string'\n  },\n  'keyword': {\n    pattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)(?=[()\\s])/,\n    lookbehind: true\n  },\n  'builtin': {\n    pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)(?=[()\\s])/,\n    lookbehind: true\n  },\n  'number': {\n    pattern: /([\\s()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n    lookbehind: true\n  },\n  'boolean': /#[tf]/,\n  'operator': {\n    pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)(?=\\s|$)/,\n    lookbehind: true\n  },\n  'function': {\n    pattern: /(\\()[^()'\\s]+(?=[()\\s)]|$)/,\n    lookbehind: true\n  },\n  'punctuation': /[()']/\n};"],"sourceRoot":""}