{"version":3,"sources":["../node_modules/prismjs/components/prism-matlab.js"],"names":["Prism","languages","matlab","comment","string","pattern","greedy","number","keyword","function","operator","punctuation"],"mappings":"6EAAAA,MAAAC,UAAAC,OAAA,CACAC,QAAA,kBAA4B,OAC5BC,OAAA,CACAC,QAAA,uBACAC,QAAA,GAGAC,OAAA,6DACAC,QAAA,8HACAC,SAAA,qBACAC,SAAA,0CACAC,YAAA","file":"static/js/196.db2a8964.chunk.js","sourcesContent":["Prism.languages.matlab = {\n  'comment': [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n  'string': {\n    pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n    greedy: true\n  },\n  // FIXME We could handle imaginary numbers as a whole\n  'number': /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n  'keyword': /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n  'function': /(?!\\d)\\w+(?=\\s*\\()/,\n  'operator': /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n  'punctuation': /\\.{3}|[.,;\\[\\](){}!]/\n};"],"sourceRoot":""}