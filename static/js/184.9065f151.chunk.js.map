{"version":3,"sources":["../node_modules/prismjs/components/prism-lolcode.js"],"names":["Prism","languages","lolcode","comment","string","pattern","inside","variable","symbol","greedy","number","lookbehind","keyword","label","alias","function","boolean","operator","punctuation"],"mappings":"6EAAAA,MAAAC,UAAAC,QAAA,CACAC,QAAA,yCACAC,OAAA,CACAC,QAAA,iBACAC,OAAA,CACAC,SAAA,aACAC,OAAA,6CAEAC,QAAA,GAEAC,OAAA,kCACAF,OAAA,CACAH,QAAA,iEACAM,YAAA,EACAL,OAAA,CACAM,QAAA,YAGAC,MAAA,CACAR,QAAA,iDACAM,YAAA,EACAG,MAAA,UAEAC,SAAA,CACAV,QAAA,6CACAM,YAAA,GAEAC,QAAA,EACAP,QAAA,sRACAM,YAAA,GACG,gBACHK,QAAA,CACAX,QAAA,+BACAM,YAAA,GAEAJ,SAAA,CACAF,QAAA,qBACAM,YAAA,GAEAM,SAAA,CACAZ,QAAA,uHACAM,YAAA,GAEAO,YAAA","file":"static/js/184.9065f151.chunk.js","sourcesContent":["Prism.languages.lolcode = {\n  'comment': [/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/, /\\bBTW.+/],\n  'string': {\n    pattern: /\"(?::.|[^\"])*\"/,\n    inside: {\n      'variable': /:\\{[^}]+\\}/,\n      'symbol': [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n    },\n    greedy: true\n  },\n  'number': /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n  'symbol': {\n    pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n    lookbehind: true,\n    inside: {\n      'keyword': /A(?=\\s)/\n    }\n  },\n  'label': {\n    pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'function': {\n    pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n    lookbehind: true\n  },\n  'keyword': [{\n    pattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n    lookbehind: true\n  }, /'Z(?=\\s|,|$)/],\n  'boolean': {\n    pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n    lookbehind: true\n  },\n  'variable': {\n    pattern: /(^|\\s)IT(?=\\s|,|$)/,\n    lookbehind: true\n  },\n  'operator': {\n    pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n    lookbehind: true\n  },\n  'punctuation': /\\.{3}|â€¦|,|!/\n};"],"sourceRoot":""}