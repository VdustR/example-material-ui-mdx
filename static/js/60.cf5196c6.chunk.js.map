{"version":3,"sources":["../node_modules/prismjs/components/prism-csharp.js"],"names":["Prism","languages","csharp","extend","pattern","greedy","inside","punctuation","lookbehind","insertBefore","function","keyword","alias","dotnet","cs"],"mappings":"+HAAAA,MAAMC,UAAUC,OAASF,MAAMC,UAAUE,OAAO,QAAS,CACvD,QAAW,6oBACX,OAAU,CAAC,CACTC,QAAS,yCACTC,QAAQ,GACP,CACDD,QAAS,mCACTC,QAAQ,IAEV,aAAc,CAAC,CAEbD,QAAS,mCACTE,OAAQ,CACNC,YAAa,OAEd,CAEDH,QAAS,2BACTI,YAAY,EACZF,OAAQ,CACNC,YAAa,OAEd,CAEDH,QAAS,0EACTI,YAAY,EACZF,OAAQ,CACNC,YAAa,OAEd,CAEDH,QAAS,wEACTI,YAAY,EACZF,OAAQ,CACNC,YAAa,QAGjB,OAAU,4CACV,SAAY,kDACZ,YAAe,2BAEjBP,MAAMC,UAAUQ,aAAa,SAAU,aAAc,CACnD,iBAAkB,CAChBL,QAAS,8BACTE,OAAQ,CACNI,SAAU,OACV,aAAc,CACZN,QAAS,yBACTE,OAAQ,CACNC,YAAa,OAGjBI,QAASX,MAAMC,UAAUC,OAAOS,QAChCJ,YAAa,cAGjB,aAAgB,CACdH,QAAS,aACTI,YAAY,EACZI,MAAO,WACPN,OAAQ,CAEN,UAAa,CACXF,QAAS,2FACTI,YAAY,EACZI,MAAO,eAKfZ,MAAMC,UAAUY,OAASb,MAAMC,UAAUa,GAAKd,MAAMC,UAAUC","file":"static/js/60.cf5196c6.chunk.js","sourcesContent":["Prism.languages.csharp = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n  'string': [{\n    pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }, {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n    greedy: true\n  }],\n  'class-name': [{\n    // (Foo bar, Bar baz)\n    pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // [Foo]\n    pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // class Foo : Bar\n    pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // class Foo\n    pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }],\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i,\n  'operator': />>=?|<<=?|[-=]>|([-+&|?])\\1|~|[-+*/%&|^!=<>]=?/,\n  'punctuation': /\\?\\.?|::|[{}[\\];(),.:]/\n});\nPrism.languages.insertBefore('csharp', 'class-name', {\n  'generic-method': {\n    pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n    inside: {\n      function: /^\\w+/,\n      'class-name': {\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      keyword: Prism.languages.csharp.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  },\n  'preprocessor': {\n    pattern: /(^\\s*)#.*/m,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight preprocessor directives as keywords\n      'directive': {\n        pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  }\n});\nPrism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp;"],"sourceRoot":""}