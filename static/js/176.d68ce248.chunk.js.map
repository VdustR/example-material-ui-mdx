{"version":3,"sources":["../node_modules/prismjs/components/prism-less.js"],"names":["Prism","languages","less","extend","comment","pattern","lookbehind","atrule","inside","punctuation","selector","variable","property","operator","insertBefore","mixin-usage","alias"],"mappings":"6EAOAA,MAAAC,UAAAC,KAAAF,MAAAC,UAAAE,OAAA,OACAC,QAAA,qBACAC,QAAA,kBACAC,YAAA,IAEAC,OAAA,CACAF,QAAA,8CACAG,OAAA,CACAC,YAAA,UAIAC,SAAA,CACAL,QAAA,yEACAG,OAAA,CAEAG,SAAA,aAGAC,SAAA,2CACAC,SAAA,aAEAb,MAAAC,UAAAa,aAAA,mBACAH,SAAA,CACA,CACAN,QAAA,cACAG,OAAA,CACAC,YAAA,MAGA,aACAM,cAAA,CACAV,QAAA,uCACAC,YAAA,EACAU,MAAA","file":"static/js/176.d68ce248.chunk.js","sourcesContent":["/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});"],"sourceRoot":""}