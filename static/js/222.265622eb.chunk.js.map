{"version":3,"sources":["../node_modules/prismjs/components/prism-ocaml.js"],"names":["Prism","languages","ocaml","comment","string","pattern","greedy","number","type","alias","directive","keyword","boolean","operator","punctuation"],"mappings":"6EAAAA,MAAAC,UAAAC,MAAA,CACAC,QAAA,mBACAC,OAAA,EACAC,QAAA,wBACAC,QAAA,GACG,CACHD,QAAA,qDACAC,QAAA,IAEAC,OAAA,yEACAC,KAAA,CACAH,QAAA,YACAI,MAAA,YAEAC,UAAA,CACAL,QAAA,SACAI,MAAA,YAEAE,QAAA,2RACAC,QAAA,qBAEAC,SAAA,kGACAC,YAAA","file":"static/js/222.265622eb.chunk.js","sourcesContent":["Prism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'type': {\n    pattern: /\\B['`]\\w*/,\n    alias: 'variable'\n  },\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  'punctuation': /[(){}\\[\\]|_.,:;]/\n};"],"sourceRoot":""}