{"version":3,"sources":["../node_modules/prismjs/components/prism-hcl.min.js"],"names":["Prism","languages","hcl","comment","heredoc","pattern","greedy","alias","keyword","inside","type","lookbehind","property","string","interpolation","function","number","punctuation","boolean"],"mappings":"6EAAAA,MAAAC,UAAAC,IAAA,CACAC,QAAA,sCACAC,QAAA,CACAC,QAAA,2BACAC,QAAA,EACAC,MAAA,UAEAC,QAAA,EACAH,QAAA,qEACAI,OAAA,CACAC,KAAA,CACAL,QAAA,iDACAM,YAAA,EACAJ,MAAA,cAGG,CACHF,QAAA,uGACAI,OAAA,CACAC,KAAA,CACAL,QAAA,gGACAM,YAAA,EACAJ,MAAA,cAGG,CACHF,QAAA,mBAEAO,SAAA,8DACAC,OAAA,CACAR,QAAA,0FACAC,QAAA,EACAG,OAAA,CACAK,cAAA,CACAT,QAAA,mDACAM,YAAA,EACAF,OAAA,CACAC,KAAA,CACAL,QAAA,sEACAM,YAAA,EACAJ,MAAA,YAEAC,QAAA,2DACAO,SAAA,YACAF,OAAA,CACAR,QAAA,yBACAC,QAAA,GAEAU,OAAA,wCACAC,YAAA,2CAKAD,OAAA,wCACAE,QAAA,sBACAD,YAAA","file":"static/js/125.3e0f9851.chunk.js","sourcesContent":["Prism.languages.hcl = {\n  comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  heredoc: {\n    pattern: /<<-?(\\w+)[\\s\\S]*?^\\s*\\1/m,\n    greedy: !0,\n    alias: \"string\"\n  },\n  keyword: [{\n    pattern: /(?:resource|data)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+{)/i,\n    inside: {\n      type: {\n        pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n        lookbehind: !0,\n        alias: \"variable\"\n      }\n    }\n  }, {\n    pattern: /(?:provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?={)/i,\n    inside: {\n      type: {\n        pattern: /(provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n        lookbehind: !0,\n        alias: \"variable\"\n      }\n    }\n  }, {\n    pattern: /[\\w-]+(?=\\s+{)/\n  }],\n  property: [/[\\w-\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n  string: {\n    pattern: /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n        lookbehind: !0,\n        inside: {\n          type: {\n            pattern: /(\\b(?:terraform|var|self|count|module|path|data|local)\\b\\.)[\\w\\*]+/i,\n            lookbehind: !0,\n            alias: \"variable\"\n          },\n          keyword: /\\b(?:terraform|var|self|count|module|path|data|local)\\b/i,\n          function: /\\w+(?=\\()/,\n          string: {\n            pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n            greedy: !0\n          },\n          number: /\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n          punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n        }\n      }\n    }\n  },\n  number: /\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n  boolean: /\\b(?:true|false)\\b/i,\n  punctuation: /[=\\[\\]{}]/\n};"],"sourceRoot":""}