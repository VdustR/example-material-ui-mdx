{"version":3,"sources":["../node_modules/prismjs/components/prism-prolog.js"],"names":["Prism","languages","prolog","comment","string","pattern","greedy","builtin","variable","function","number","operator","punctuation"],"mappings":"6EAAAA,MAAAC,UAAAC,OAAA,CAEAC,QAAA,2BAEAC,OAAA,CACAC,QAAA,sDACAC,QAAA,GAEAC,QAAA,6BACAC,SAAA,cAEAC,SAAA,6BACAC,OAAA,cAEAC,SAAA,iDACAC,YAAA","file":"static/js/248.fa477f40.chunk.js","sourcesContent":["Prism.languages.prolog = {\n  // Syntax depends on the implementation\n  'comment': [/%.+/, /\\/\\*[\\s\\S]*?\\*\\//],\n  // Depending on the implementation, strings may allow escaped newlines and quote-escape\n  'string': {\n    pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin': /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n  'variable': /\\b[A-Z_]\\w*/,\n  // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n  'function': /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n  'number': /\\b\\d+\\.?\\d*/,\n  // Custom operators are allowed\n  'operator': /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n  'punctuation': /[(){}\\[\\],]/\n};"],"sourceRoot":""}