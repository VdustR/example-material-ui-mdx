{"version":3,"sources":["../node_modules/prismjs/components/prism-abnf.min.js"],"names":["n","i","Prism","languages","abnf","comment","string","pattern","greedy","inside","punctuation","range","alias","terminal","repetition","lookbehind","definition","core-rule","RegExp","rule","operator"],"mappings":"2EAAA,SAAAA,GACA,IAAAC,EAAA,qFACAC,MAAAC,UAAAC,KAAA,CACAC,QAAA,MACAC,OAAA,CACAC,QAAA,wBACAC,QAAA,EACAC,OAAA,CACAC,YAAA,WAGAC,MAAA,CACAJ,QAAA,iDACAK,MAAA,UAEAC,SAAA,CACAN,QAAA,mEACAK,MAAA,UAEAE,WAAA,CACAP,QAAA,6BACAQ,YAAA,EACAH,MAAA,YAEAI,WAAA,CACAT,QAAA,gDACAQ,YAAA,EACAH,MAAA,UACAH,OAAA,CACAC,YAAA,QAGAO,YAAA,CACAV,QAAAW,OAAA,kBAAAjB,EAAA,KAAAA,EAAA,oBACAc,YAAA,EACAH,MAAA,oBACAH,OAAA,CACAC,YAAA,QAGAS,KAAA,CACAZ,QAAA,sCACAQ,YAAA,EACAN,OAAA,CACAC,YAAA,QAGAU,SAAA,UACAV,YAAA,YAhDA","file":"static/js/3.c8a075b9.chunk.js","sourcesContent":["!function (n) {\n  var i = \"(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)\";\n  Prism.languages.abnf = {\n    comment: /;.*/,\n    string: {\n      pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n      greedy: !0,\n      inside: {\n        punctuation: /^%[is]/\n      }\n    },\n    range: {\n      pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n      alias: \"number\"\n    },\n    terminal: {\n      pattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n      alias: \"number\"\n    },\n    repetition: {\n      pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n      lookbehind: !0,\n      alias: \"operator\"\n    },\n    definition: {\n      pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^>\\r\\n]*>)(?=\\s*=)/m,\n      lookbehind: !0,\n      alias: \"keyword\",\n      inside: {\n        punctuation: /<|>/\n      }\n    },\n    \"core-rule\": {\n      pattern: RegExp(\"(?:(^|[^<\\\\w-])\" + i + \"|<\" + i + \">)(?![\\\\w-])\", \"i\"),\n      lookbehind: !0,\n      alias: [\"rule\", \"constant\"],\n      inside: {\n        punctuation: /<|>/\n      }\n    },\n    rule: {\n      pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^>\\r\\n]*>/i,\n      lookbehind: !0,\n      inside: {\n        punctuation: /<|>/\n      }\n    },\n    operator: /=\\/?|\\//,\n    punctuation: /[()\\[\\]]/\n  };\n}();"],"sourceRoot":""}