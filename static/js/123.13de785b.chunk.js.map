{"version":3,"sources":["../node_modules/prismjs/components/prism-haxe.min.js"],"names":["Prism","languages","haxe","extend","string","pattern","greedy","inside","interpolation","lookbehind","alias","keyword","operator","insertBefore","regex","preprocessor","metadata","reification","rest"],"mappings":"6EAAAA,MAAAC,UAAAC,KAAAF,MAAAC,UAAAE,OAAA,SACAC,OAAA,CACAC,QAAA,oCACAC,QAAA,EACAC,OAAA,CACAC,cAAA,CACAH,QAAA,+BACAI,YAAA,EACAF,OAAA,CACAC,cAAA,CACAH,QAAA,SACAK,MAAA,gBAMAC,QAAA,wRACAC,SAAA,+DACCZ,MAAAC,UAAAY,aAAA,qBACDC,MAAA,CACAT,QAAA,oCACAC,QAAA,KAECN,MAAAC,UAAAY,aAAA,kBACDE,aAAA,CACAV,QAAA,OACAK,MAAA,WAEAM,SAAA,CACAX,QAAA,SACAK,MAAA,UAEAO,YAAA,CACAZ,QAAA,mBACAK,MAAA,cAECV,MAAAC,UAAAC,KAAAE,OAAAG,OAAAC,cAAAD,OAAAW,KAAAlB,MAAAC,UAAAC,YAAAF,MAAAC,UAAAC,KAAA","file":"static/js/123.13de785b.chunk.js","sourcesContent":["Prism.languages.haxe = Prism.languages.extend(\"clike\", {\n  string: {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n        lookbehind: !0,\n        inside: {\n          interpolation: {\n            pattern: /^\\$\\w*/,\n            alias: \"variable\"\n          }\n        }\n      }\n    }\n  },\n  keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n  operator: /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n}), Prism.languages.insertBefore(\"haxe\", \"class-name\", {\n  regex: {\n    pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n    greedy: !0\n  }\n}), Prism.languages.insertBefore(\"haxe\", \"keyword\", {\n  preprocessor: {\n    pattern: /#\\w+/,\n    alias: \"builtin\"\n  },\n  metadata: {\n    pattern: /@:?\\w+/,\n    alias: \"symbol\"\n  },\n  reification: {\n    pattern: /\\$(?:\\w+|(?=\\{))/,\n    alias: \"variable\"\n  }\n}), Prism.languages.haxe.string.inside.interpolation.inside.rest = Prism.languages.haxe, delete Prism.languages.haxe[\"class-name\"];"],"sourceRoot":""}