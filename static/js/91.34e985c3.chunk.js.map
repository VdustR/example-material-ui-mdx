{"version":3,"sources":["../node_modules/prismjs/components/prism-erlang.min.js"],"names":["Prism","languages","erlang","comment","string","pattern","greedy","quoted-function","alias","quoted-atom","boolean","keyword","number","function","variable","lookbehind","operator","atom","punctuation"],"mappings":"4EAAAA,MAAAC,UAAAC,OAAA,CACAC,QAAA,MACAC,OAAA,CACAC,QAAA,wBACAC,QAAA,GAEAC,kBAAA,CACAF,QAAA,8BACAG,MAAA,YAEAC,cAAA,CACAJ,QAAA,wBACAG,MAAA,QAEAE,QAAA,qBACAC,QAAA,0DACAC,OAAA,qEACAC,SAAA,sBACAC,SAAA,CACAT,QAAA,gCACAU,YAAA,GAEAC,SAAA,iHACAX,QAAA,iBACAU,YAAA,GACG,CACHV,QAAA,iBACAU,YAAA,IAEAE,KAAA,gBACAC,YAAA","file":"static/js/91.34e985c3.chunk.js","sourcesContent":["Prism.languages.erlang = {\n  comment: /%.+/,\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: !0\n  },\n  \"quoted-function\": {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n    alias: \"function\"\n  },\n  \"quoted-atom\": {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n    alias: \"atom\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n  number: [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n  function: /\\b[a-z][\\w@]*(?=\\()/,\n  variable: {\n    pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n    lookbehind: !0\n  },\n  operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: !0\n  }],\n  atom: /\\b[a-z][\\w@]*/,\n  punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n};"],"sourceRoot":""}